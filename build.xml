<?xml version="1.0"?>

<project name="Trendrr-Beanstalk-Client" default="jar" basedir=".">

	<fileset id="lib" dir="lib">
		<include name="*.jar" />
	</fileset>
	
	<path id="build.classpath">
		<fileset refid="lib" />
	</path>
	
	<target name="clean">
		<delete dir="build"/>
	</target>

	<target name="compile" 
		description="Compile the Java source code"
		depends="clean"
		>
		<mkdir dir="build/classes"/>
		<javac classpathref="build.classpath" destdir="build/classes" debug="true">
			<src path="src" />
		</javac>
	</target>
	
	<target name="jar" depends="compile">
		<property name="version.num" value="1.00" />
		<buildnumber file="build/build.num"/>
		<tstamp>
			<format property="TODAY" pattern="yyyy-MM-dd HH:mm:ss" />
	   	</tstamp>
		<mkdir dir="build/jar"/>
		<copy todir="build/jar">
			<fileset dir="build/classes">
				<include name="**/*.class"/>
			</fileset>
		</copy>
		<mkdir dir="build/jar/META-INF"/>
		
		<!-- Set up the class path.. Seems verbose, ehh? yeah, There should be a better way! -->  
		<property name="jar-all" location="lib" />
		<fileset id="jars" dir="${jar-all}">
			<include name="*.jar" />
		</fileset>
		<path id="cp"> <fileset refid="jars" /> </path>
		<pathconvert property="classpath" refid="cp"
		                 pathsep=" " dirsep="/">
		      <map from="${jar-all}" to="lib" />
		</pathconvert>
		
		<!-- build the manifest -->
		<manifest file="build/jar/META-INF/MANIFEST.MF">
			<attribute name="Built-By" value="Dustin Norlander"/>
			<attribute name="Implementation-Version" 
			             value="${version.num}-b${build.number}"/>   
			<attribute name="Built-Date" value="${TODAY}"/> 
			<attribute name="Class-Path" value="${classpath}"/>
		</manifest>

		<jar destfile="build/trendrr-beanstalk.jar"
			basedir="build/jar"
			manifest="build/jar/META-INF/MANIFEST.MF"
			>
			<exclude name="*.jar" />
			<include name="**/*"/>
		</jar>
	</target>
	
	<!-- This is for doing a production build of the jar and javadocs.  It expects to 
		put the files in /html/TrendrrBeanstalk.  This target is mostly for my own setup
		-Dustin
	-->
	<target name="production-build" description="Builds the javadocs and production jar"
		depends="jar,javadoc"
		>
		<mkdir dir="/html/TrendrrBeanstalk/javadoc"/>
		<copy todir="/html/TrendrrBeanstalk/javadoc">
			<fileset dir="build/javadoc">
				<include name="**/*"/>
			</fileset>
		</copy>
		<copy todir="/html/TrendrrBeanstalk">
			<fileset dir="build">
				<include name="*.jar"/>
			</fileset>
		</copy>
	</target>
	
	<target name="javadoc" description="Create Javadocs">
        <mkdir dir="build/javadoc/"/>
        <javadoc 
            destdir="build/javadoc/"
        	classpathref="build.classpath"
        	access="public"
        	>
            <fileset dir="src" includes="**/*.java" />
        </javadoc>
    </target>
</project>
